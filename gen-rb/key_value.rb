#
# Autogenerated by Thrift Compiler (0.9.1)
#
# DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
#

require 'thrift'
require 'basic-service_types'

module Basicservice
  module KeyValue
    class Client
      include ::Thrift::Client

      def ping()
        send_ping()
        recv_ping()
      end

      def send_ping()
        send_message('ping', Ping_args)
      end

      def recv_ping()
        result = receive_message(Ping_result)
        return
      end

      def setValue(key, value)
        send_setValue(key, value)
        recv_setValue()
      end

      def send_setValue(key, value)
        send_message('setValue', SetValue_args, :key => key, :value => value)
      end

      def recv_setValue()
        result = receive_message(SetValue_result)
        return
      end

    end

    class Processor
      include ::Thrift::Processor

      def process_ping(seqid, iprot, oprot)
        args = read_args(iprot, Ping_args)
        result = Ping_result.new()
        @handler.ping()
        write_result(result, oprot, 'ping', seqid)
      end

      def process_setValue(seqid, iprot, oprot)
        args = read_args(iprot, SetValue_args)
        result = SetValue_result.new()
        @handler.setValue(args.key, args.value)
        write_result(result, oprot, 'setValue', seqid)
      end

    end

    # HELPER FUNCTIONS AND STRUCTURES

    class Ping_args
      include ::Thrift::Struct, ::Thrift::Struct_Union

      FIELDS = {

      }

      def struct_fields; FIELDS; end

      def validate
      end

      ::Thrift::Struct.generate_accessors self
    end

    class Ping_result
      include ::Thrift::Struct, ::Thrift::Struct_Union

      FIELDS = {

      }

      def struct_fields; FIELDS; end

      def validate
      end

      ::Thrift::Struct.generate_accessors self
    end

    class SetValue_args
      include ::Thrift::Struct, ::Thrift::Struct_Union
      KEY = 1
      VALUE = 2

      FIELDS = {
        KEY => {:type => ::Thrift::Types::I32, :name => 'key'},
        VALUE => {:type => ::Thrift::Types::STRING, :name => 'value'}
      }

      def struct_fields; FIELDS; end

      def validate
      end

      ::Thrift::Struct.generate_accessors self
    end

    class SetValue_result
      include ::Thrift::Struct, ::Thrift::Struct_Union

      FIELDS = {

      }

      def struct_fields; FIELDS; end

      def validate
      end

      ::Thrift::Struct.generate_accessors self
    end

  end

end
